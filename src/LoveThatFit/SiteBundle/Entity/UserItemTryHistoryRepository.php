<?php

namespace LoveThatFit\SiteBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserItemTryHistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserItemTryHistoryRepository extends EntityRepository {

    public function findUserItemAllTryHistory($user, $product, $productItem) {
        $total_record = $this->getEntityManager()
                        ->createQuery("SELECT ut FROM LoveThatFitSiteBundle:UserItemTryHistory ut
     WHERE
     ut.user=:user_id
     AND ut.productitem=:product_item_id
     AND
     ut.product=:product_id"
                        )->setParameters(array('user_id' => $user, 'product_item_id' => $productItem, 'product_id' => $product));
        try {
            return $total_record->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findUserTriedProdcuts($user) {
        $total_record = $this->getEntityManager()
                        ->createQuery("SELECT ut FROM LoveThatFitSiteBundle:UserItemTryHistory ut
     WHERE
     ut.user=:user_id"
                        )->setParameters(array('user_id' => $user));
        try {
            return $total_record->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
    
     public function findUserTriedBrands($user) {
        $total_record = $this->getEntityManager()
                        ->createQuery("
        SELECT b FROM LoveThatFitAdminBundle:Brand b
                            JOIN b.products p
                            JOIN p.user_item_try_history ut
     WHERE
     ut.user=:user_id"
                        )->setParameters(array('user_id' => $user));
        try {
            return $total_record->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    

}
