<?php

namespace LoveThatFit\AdminBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductSizeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductSizeRepository extends EntityRepository {

    public function getProductSizeTitleArray($id) {
        $query = $this->getEntityManager()
                        ->createQuery('
            SELECT ps.title FROM LoveThatFitAdminBundle:Product p 
            JOIN p.product_sizes ps
            WHERE p.id = :id'
                        )->setParameter('id', $id);

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findSizeByProductTitle($title, $productid) {
        $record = $this->getEntityManager()
                ->createQuery("SELECT p FROM LoveThatFitAdminBundle:ProductSize p                                   
                                WHERE p.title = :title
                                AND p.product=:product")
                ->setParameters(array('title' => ucwords($title), 'product' => $productid));
        try {
            return $record->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function getSizeMeasurementArray($id) {
        $query = $this->getEntityManager()
                        ->createQuery('
            SELECT ps.title as size, psm.id as id ,psm.title, psm.garment_measurement_flat,
            psm.max_body_measurement, psm.vertical_stretch, psm.horizontal_stretch,
            psm.stretch_type_percentage, psm.ideal_body_size_high, psm.ideal_body_size_low
            FROM LoveThatFitAdminBundle:ProductSize ps
            JOIN ps.product_size_measurements psm
            WHERE ps.id = :id'
                        )->setParameter('id', $id);
        try {
            return $query->getResult(2); //to get it in associative array
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
}
